#pragma once
#include "CoreMinimal.h"
#include "E_BTL_STEP.generated.h"

UENUM(BlueprintType)
enum class E_BTL_STEP : uint8 {
    E_BTL_STEP_NONE,
    E_BTL_STEP_DEBUG1,
    E_BTL_STEP_READY,
    E_BTL_STEP_PRE,
    E_BTL_STEP_ENCOUNT,
    E_BTL_STEP_START_EVENT,
    E_BTL_STEP_TURN_CHANGE,
    E_BTL_STEP_TURN_START_EVENT,
    E_BTL_STEP_UPLIFTING_TURN,
    E_BTL_STEP_ENEMY_TURNSTART_RETURN,
    E_BTL_STEP_PRESS_PRE,
    E_BTL_STEP_ACTION_PRE,
    E_BTL_STEP_ACTION,
    E_BTL_STEP_ACTION_EVENT,
    E_BTL_STEP_ACTION_AFTER,
    E_BTL_STEP_CHECK_END,
    E_BTL_STEP_CHECK_TURN,
    E_BTL_STEP_TURN_END,
    E_BTL_STEP_TURN_END_EVENT,
    E_BTL_STEP_ENEMY_UPLIFTING,
    E_BTL_STEP_ENEMY_TURNEND_RETURN,
    E_BTL_STEP_RENZOKU,
    E_BTL_STEP_INOCHIGOI,
    E_BTL_STEP_MERCY_TALK,
    E_BTL_STEP_END_EVENT,
    E_BTL_STEP_POST,
    E_BTL_STEP_RESULT,
    E_BTL_STEP_TALK_END_FRIEND,
    E_BTL_STEP_ESCAPE,
    E_BTL_STEP_GAMEOVER,
    E_BTL_STEP_END,
    E_BTL_STEP_FINISH_WAIT,
    E_BTL_STEP_DEBUG2,
    E_BTL_STEP_EDITOR,
    E_BTL_STEP_VALID_MAX UMETA(Hidden),
    E_BTL_STEP_INVALID,
};

